.TH LIBSIMPLE_MEMALIGN 3 2018-11-03 libsimple
.SH NAME
libsimple_memalign \- allocate memory with custom alignment
.SH SYNOPSIS
.nf
#include <libsimple.h>

static inline void *libsimple_memalign(size_t \fIalignment\fP, size_t \fIn\fP);
static inline void *libsimple_enmemalign(int \fIstatus\fP, size_t \fIalignment\fP, size_t \fIn\fP);
static inline void *libsimple_ememalign(size_t \fIalignment\fP, size_t \fIn\fP);

#ifndef memalign
# define memalign libsimple_memalign
#endif
#ifndef enmemalign
# define enmemalign libsimple_enmemalign
#endif
#ifndef ememalign
# define ememalign libsimple_ememalign
#endif
.fi
.PP
Link with
.IR \-lsimple .
.SH DESCRIPTION
The
.BR libsimple_memalign (),
.BR libsimple_enmemalign (),
and
.BR libsimple_ememalign ()
functions allocate
.I n
uninitialised bytes to the heap and return a
pointer with an alignment of
.I alignment
bytes to the allocated memory. The function
.BR free (3)
shall be called with the returned pointer as
input when the allocated memory is no longer needed.
.PP
The
.BR libsimple_enmemalign ()
and
.BR libsimple_ememalign ()
functions will terminate the process if the memory
cannot be allocated of if the user tries to allocate
0 bytes, by calling the
.BR libsimple_enprintf ()
and
.BR libsimple_eprintf ()
functions, respectively.
On failure, the process's exit value will be
.I status
if the
.BR libsimple_enmemalign ()
function is used or
.IR libsimple_default_failure_exit (3)
if the
.BR libsimple_ememalign ()
function is used.
.PP
The
.BR libsimple_enmemalign ()
and
.BR libsimple_ememalign ()
functions behaviour is unspecified if
.I n
is 0.
.SH RETURN VALUE
The
.BR libsimple_memalign (),
.BR libsimple_enmemalign (),
and
.BR libsimple_ememalign ()
functions return a pointer to the allocated memory
upon success completion; otherwise the
.BR libsimple_memalign ()
function return
.B NULL
and set
.I errno
it indicate the error, and the
.BR libsimple_enmemalign ()
and
.BR libsimple_ememalign ()
functions terminated the process.
.SH ERRORS
The
.BR libsimple_memalign ()
function will fail if:
.TP
.B EINVAL
.I n
is 0.
.TP
.B EINVAL
.I alignment
is not a power of two.
.TP
.B ENOMEM
Enough memory could not be allocated.
.PP
The
.BR libsimple_enmemalign ()
and
.BR libsimple_ememalign ()
functions will terminate the process on failure.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lb lb lb
l l l.
Interface	Attribute	Value
T{
.BR libsimple_memalign (),
.br
.BR libsimple_enmemalign (),
.br
.BR libsimple_ememalign ()
T}	Thread safety	MT-Safe
T{
.BR libsimple_memalign (),
.br
.BR libsimple_enmemalign (),
.br
.BR libsimple_ememalign ()
T}	Async-signal safety	AS-Safe
T{
.BR libsimple_memalign (),
.br
.BR libsimple_enmemalign (),
.br
.BR libsimple_ememalign ()
T}	Async-cancel safety	AC-Safe
.TE
.SH EXAMPLES
None.
.SH APPLICATION USAGE
None.
.SH RATIONALE
None.
.SH FUTURE DIRECTIONS
None.
.SH NOTES
None.
.SH BUGS
None.
.SH SEE ALSO
.BR libsimple_enmalloc (3),
.BR libsimple_mallocz (3),
.BR libsimple_vmallocn (3),
.BR libsimple_vmalloczn (3),
.BR libsimple_encalloc (3),
.BR libsimple_vcallocn (3),
.BR libsimple_enrealloc (3),
.BR libsimple_vreallocn (3),
.BR libsimple_memalignz (3),
.BR libsimple_vmemalignn (3),
.BR libsimple_vmemalignzn (3),
.BR libsimple_enposix_memalign (3),
.BR libsimple_posix_memalignz (3),
.BR libsimple_vposix_memalignn (3),
.BR libsimple_vposix_memalignzn (3),
.BR libsimple_enaligned_alloc (3),
.BR libsimple_aligned_allocz (3),
.BR libsimple_valigned_allocn (3),
.BR libsimple_valigned_alloczn (3),
.BR libsimple_pvalloc (3),
.BR libsimple_pvallocz (3),
.BR libsimple_vpvallocn (3),
.BR libsimple_vpvalloczn (3),
.BR libsimple_valloc (3),
.BR libsimple_vallocz (3),
.BR libsimple_vvallocn (3),
.BR libsimple_vvalloczn (3),
.BR libsimple_vmemalloc (3),
.BR libsimple_varrayalloc (3)

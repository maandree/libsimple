.TH LIBSIMPLE_POSIX_MEMALIGNZ 3 2018-11-03 libsimple
.SH NAME
libsimple_posix_memalignz \- allocate optionally initialised memory with custom alignment
.SH SYNOPSIS
.nf
#include <libsimple.h>

static inline int libsimple_posix_memalignz(void **\fImemptr\fP, int \fIclear\fP, size_t \fIalignment\fP, size_t \fIn\fP);
void libsimple_enposix_memalignz(int \fIstatus\fP, void **\fImemptr\fP, int \fIclear\fP, size_t \fIalignment\fP, size_t \fIn\fP);
static inline void libsimple_eposix_memalignz(void **\fImemptr\fP, int \fIclear\fP, size_t \fIalignment\fP, size_t \fIn\fP);

#ifndef posix_memalignz
# define posix_memalignz libsimple_posix_memalignz
#endif
#ifndef enposix_memalignz
# define enposix_memalignz libsimple_enposix_memalignz
#endif
#ifndef eposix_memalignz
# define eposix_memalignz libsimple_eposix_memalignz
#endif
.fi
.PP
Link with
.IR \-lsimple .
.SH DESCRIPTION
The
.BR libsimple_posix_memalignz (),
.BR libsimple_enposix_memalignz (),
and
.BR libsimple_eposix_memalignz ()
functions allocate
.I n
bytes to the heap and store a pointer with an
alignment of
.I alignment
bytes to the allocated memory in
.IR memptr .
The memory will be initialised with zeroes if
.I clear
is a non-zero value. The function
.BR free (3)
shall be called with the pointer stored in
.I memptr
as input when the allocated memory is no longer needed.
.I *memptr
remains unmodified on failure.
.PP
The
.BR libsimple_enposix_memalignz ()
and
.BR libsimple_eposix_memalignz ()
functions will terminate the process if the memory
cannot be allocated of if the user tries to allocate
0 bytes, by calling the
.BR libsimple_enprintf ()
and
.BR libsimple_eprintf ()
functions, respectively.
On failure, the process's exit value will be
.I status
if the
.BR libsimple_enposix_memalignz ()
function is used or
.IR libsimple_default_failure_exit (3)
if the
.BR libsimple_eposix_memalignz ()
function is used.
.PP
The
.BR libsimple_enposix_memalignz ()
and
.BR libsimple_eposix_memalignz ()
functions behaviour is unspecified if
.I n
is 0.
.SH RETURN VALUE
The
.BR libsimple_posix_memalignz ()
function returns 0 upon successful completion;
otherwise an error code is returned to indicate
the error.
.PP
The
.BR libsimple_enposix_memalignz ()
and
.BR libsimple_eposix_memalignz ()
functions do not return a value, but
terminated the process on failure.
.SH ERRORS
The
.BR libsimple_posix_memalignz ()
function will fail if:
.TP
.B EINVAL
.I n
is 0.
.TP
.B EINVAL
.I alignment
is not a power of two.
.TP
.B EINVAL
.I alignment
is not a multiple of
.IR "sizeof(void *)" .
.TP
.B ENOMEM
Enough memory could not be allocated.
.PP
The
.BR libsimple_enposix_memalignz ()
and
.BR libsimple_eposix_memalignz ()
functions will terminate the process on failure.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lb lb lb
l l l.
Interface	Attribute	Value
T{
.BR libsimple_posix_memalignz (),
.br
.BR libsimple_enposix_memalignz (),
.br
.BR libsimple_eposix_memalignz ()
T}	Thread safety	MT-Safe
T{
.BR libsimple_posix_memalignz (),
.br
.BR libsimple_enposix_memalignz (),
.br
.BR libsimple_eposix_memalignz ()
T}	Async-signal safety	AS-Safe
T{
.BR libsimple_posix_memalignz (),
.br
.BR libsimple_enposix_memalignz (),
.br
.BR libsimple_eposix_memalignz ()
T}	Async-cancel safety	AC-Safe
.TE
.SH EXAMPLES
None.
.SH APPLICATION USAGE
None.
.SH RATIONALE
None.
.SH FUTURE DIRECTIONS
None.
.SH NOTES
None.
.SH BUGS
None.
.SH SEE ALSO
.BR libsimple_enmalloc (3),
.BR libsimple_mallocz (3),
.BR libsimple_vmallocn (3),
.BR libsimple_vmalloczn (3),
.BR libsimple_encalloc (3),
.BR libsimple_vcallocn (3),
.BR libsimple_enrealloc (3),
.BR libsimple_vreallocn (3),
.BR libsimple_memalign (3),
.BR libsimple_memalignz (3),
.BR libsimple_vmemalignn (3),
.BR libsimple_vmemalignzn (3),
.BR libsimple_enposix_memalign (3),
.BR libsimple_vposix_memalignn (3),
.BR libsimple_vposix_memalignzn (3),
.BR libsimple_enaligned_alloc (3),
.BR libsimple_aligned_allocz (3),
.BR libsimple_valigned_allocn (3),
.BR libsimple_valigned_alloczn (3),
.BR libsimple_pvalloc (3),
.BR libsimple_pvallocz (3),
.BR libsimple_vpvallocn (3),
.BR libsimple_vpvalloczn (3),
.BR libsimple_valloc (3),
.BR libsimple_vallocz (3),
.BR libsimple_vvallocn (3),
.BR libsimple_vvalloczn (3),
.BR libsimple_vmemalloc (3),
.BR libsimple_varrayalloc (3),
.BR posix_memalign (3)
